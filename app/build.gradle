/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

//    https://plugins.gradle.org/plugin/com.intershop.gradle.javacc
//    id "com.intershop.gradle.javacc" version "4.0.1"
}

//javacc {
//    // configuration container for all javacc configurations
//    configs {
//        template {
//            inputFile = file('src/main/codegen/templates/Parser.jj')
//            packageName = 'org.apache.calcite.sql.parser.impl'
//            lookahead = '2'
//        }
//    }
//}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation("org.apache.calcite:calcite-core:1.32.0")
    implementation("mysql:mysql-connector-java:8.0.18")
    implementation("org.postgresql:postgresql:42.2.9")
//    implementation("com.microsoft.sqlserver:mssql-jdbc:10.2.0.jre11")

    implementation 'org.codehaus.mojo:javacc-maven-plugin:3.0.0'
    implementation 'org.apache.drill.tools:drill-fmpp-maven-plugin:1.20.2'
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'junit:junit:4.13.2'
}

application {
    // Define the main class for the application.
    mainClass = 'org.learn.calcite.SqlParserDemo'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
